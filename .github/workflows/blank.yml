name: 'publish'

on:
  push:
    branches:
      - moderator-interface

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04'
          - platform: 'windows-latest'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install

      - name: Get package info
        id: get_package_info
        shell: pwsh
        run: |
           $name = (Get-Content ./Cargo.toml | Select-String -Pattern '^name = "(.+)"$' | ForEach-Object { $_.Matches[0].Groups[1].Value })
           $version = (Get-Content ./Cargo.toml | Select-String -Pattern '^version = "(.+)"$' | ForEach-Object { $_.Matches[0].Groups[1].Value })
           echo "name=$name" >> "$env:GITHUB_OUTPUT"
           echo "version=$version" >> "$env:GITHUB_OUTPUT"

      - uses: tauri-apps/tauri-action@v0
        env:
          CARGO_INCREMENTAL: 0
          CARGO_TERM_COLOR: always
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          projectPath: .
          includeDebug: false
          includeRelease: true
          includeUpdaterJson: true
          updaterJsonKeepUniversal: false
          packageName: ${{ steps.get_package_info.outputs.name }}
          packageVersion: ${{ steps.get_package_info.outputs.version }}
